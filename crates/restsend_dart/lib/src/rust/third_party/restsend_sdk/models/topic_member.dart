// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.6.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `lower_return`, `lower`, `lower`, `try_convert_unexpected_callback_error`, `try_lift_successful_return`, `try_lift`, `try_lift`, `try_read`, `try_read`, `write`, `write`

class TopicMember {
  final String topicId;
  final String userId;
  final String name;
  final String source;
  final String? silenceAt;
  final String joinedAt;
  final String updatedAt;
  final Map<String, String>? extra;

  const TopicMember({
    required this.topicId,
    required this.userId,
    required this.name,
    required this.source,
    this.silenceAt,
    required this.joinedAt,
    required this.updatedAt,
    this.extra,
  });

  static Future<TopicMember> default_() =>
      RustLib.instance.api.restsendSdkModelsTopicMemberTopicMemberDefault();

  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  static Future<TopicMember> newInstance(
          {required String topicId, required String userId}) =>
      RustLib.instance.api.restsendSdkModelsTopicMemberTopicMemberNew(
          topicId: topicId, userId: userId);

  @override
  int get hashCode =>
      topicId.hashCode ^
      userId.hashCode ^
      name.hashCode ^
      source.hashCode ^
      silenceAt.hashCode ^
      joinedAt.hashCode ^
      updatedAt.hashCode ^
      extra.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is TopicMember &&
          runtimeType == other.runtimeType &&
          topicId == other.topicId &&
          userId == other.userId &&
          name == other.name &&
          source == other.source &&
          silenceAt == other.silenceAt &&
          joinedAt == other.joinedAt &&
          updatedAt == other.updatedAt &&
          extra == other.extra;
}
