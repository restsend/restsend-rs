// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.6.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'models/user.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they have generic arguments: `omit_empty`
// These types are ignored because they are not used by any `pub` functions: `GetChatLogsResult`, `ListChatLogResult`, `ListConversationResult`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `clone`, `clone`, `fmt`, `fmt`, `fmt`, `fmt`, `fmt`, `from`, `lower_return`, `lower_return`, `lower_return`, `lower`, `lower`, `lower`, `lower`, `lower`, `lower`, `try_convert_unexpected_callback_error`, `try_convert_unexpected_callback_error`, `try_convert_unexpected_callback_error`, `try_lift_successful_return`, `try_lift_successful_return`, `try_lift_successful_return`, `try_lift`, `try_lift`, `try_lift`, `try_lift`, `try_lift`, `try_lift`, `try_read`, `try_read`, `try_read`, `try_read`, `try_read`, `try_read`, `write`, `write`, `write`, `write`, `write`, `write`
// These functions are ignored (category: IgnoreBecauseType): `from_local_logs`

class ListUserResult {
  final bool hasMore;
  final String updatedAt;
  final List<User> items;

  const ListUserResult({
    required this.hasMore,
    required this.updatedAt,
    required this.items,
  });

  static Future<ListUserResult> default_() =>
      RustLib.instance.api.restsendSdkModelsListUserResultDefault();

  @override
  int get hashCode => hasMore.hashCode ^ updatedAt.hashCode ^ items.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is ListUserResult &&
          runtimeType == other.runtimeType &&
          hasMore == other.hasMore &&
          updatedAt == other.updatedAt &&
          items == other.items;
}

class TopicKnock {
  final String createdAt;
  final String updatedAt;
  final String topicId;
  final String userId;
  final String message;
  final String source;
  final String status;
  final String adminId;

  const TopicKnock({
    required this.createdAt,
    required this.updatedAt,
    required this.topicId,
    required this.userId,
    required this.message,
    required this.source,
    required this.status,
    required this.adminId,
  });

  // HINT: Make it `#[frb(sync)]` to let it become the default constructor of Dart class.
  static Future<TopicKnock> newInstance(
          {required String topicId, required String userId}) =>
      RustLib.instance.api
          .restsendSdkModelsTopicKnockNew(topicId: topicId, userId: userId);

  @override
  int get hashCode =>
      createdAt.hashCode ^
      updatedAt.hashCode ^
      topicId.hashCode ^
      userId.hashCode ^
      message.hashCode ^
      source.hashCode ^
      status.hashCode ^
      adminId.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is TopicKnock &&
          runtimeType == other.runtimeType &&
          createdAt == other.createdAt &&
          updatedAt == other.updatedAt &&
          topicId == other.topicId &&
          userId == other.userId &&
          message == other.message &&
          source == other.source &&
          status == other.status &&
          adminId == other.adminId;
}
